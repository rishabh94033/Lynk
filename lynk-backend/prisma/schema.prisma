// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conversation {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  messages    Message[]
  participants User[]    @relation("UserConversations")
}

model Message {
  id             String       @id @default(cuid())
  content        String
  createdAt      DateTime     @default(now())
  senderId       String
  sender         User         @relation(fields: [senderId], references: [id])
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  username  String?  @unique  
  bio       String?
  image     String?
  password  String?
  location  String?
  phone     String?
  onboarded Boolean   @default(false)
  status    String?  @default("online") // online, offline, away
  interests  Interest[] @relation("UserInterests")
  conversations Conversation[] @relation("UserConversations")
  messages     Message[]
  rooms        rooms[]   @relation("UserRooms")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Interest {
  id     String  @id @default(cuid())
  name   String  @unique
  users  User[]  @relation("UserInterests")
}


model rooms {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]   @relation("UserRooms")
}